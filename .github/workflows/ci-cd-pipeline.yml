name: CI/CD Pipeline for .NET Core App

on:
  push:
    branches:
      - master  # Trigger pipeline on push to 'main' branch
  pull_request:
    branches:
      - master  # Trigger pipeline on pull request to 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'  # Set .NET version (update as needed)

    - name: Restore dependencies
      run: dotnet restore  # Restore NuGet packages for both the main app and test project

    - name: Build the project
      run: dotnet build --configuration Release  # Build the project in Release mode

    - name: Run tests
      run: dotnet test --configuration Release  # Run unit tests using xUnit or other test framework

  sonarQubeAnalysis:
    runs-on: ubuntu-latest
    needs: build  # This job runs after the 'build' job completes

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SonarQube scanner
      uses: sonarsource/sonarcloud-github-action@v1
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}  # Store the SonarQube token as a GitHub secret

    - name: Run SonarQube analysis
      run: dotnet sonarscanner begin /k:"github-actions-learning_cicd" /d:sonar.login=${{ secrets.SONAR_TOKEN }}
    
    - name: Build the project for analysis
      run: dotnet build --configuration Release
    
    - name: End SonarQube analysis
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
